import{_ as t,c as s,o as a,Q as e}from"./chunks/framework.b316c3a7.js";const _=JSON.parse('{"title":"replaceAop","description":"","frontmatter":{},"headers":[],"relativePath":"vdrag-topo-utils-doc/object.md","lastUpdated":1699946773000}'),l={name:"vdrag-topo-utils-doc/object.md"},o=e(`<h1 id="replaceaop" tabindex="-1">replaceAop <a class="header-anchor" href="#replaceaop" aria-label="Permalink to &quot;replaceAop&quot;">​</a></h1><blockquote><p>重写对象上的某个方法</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">replaceAop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vdrag-topo-utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">replaceAop</span><span style="color:#A6ACCD;">(window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">history</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pushState</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> historyReplaceFn)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>入参</li></ul><table><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:right;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">source</td><td style="text-align:right;">需要重写的对象</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:right;">被重写对象的属性名</td></tr><tr><td style="text-align:left;">replacementFactory</td><td style="text-align:right;">以原有的函数作为参数，执行并重写原有函数</td></tr></tbody></table>`,5),n=[o];function p(r,c,i,d,y,D){return a(),s("div",null,n)}const h=t(l,[["render",p]]);export{_ as __pageData,h as default};
